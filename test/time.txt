内核里的时间获取和延时
1.延时一种是mdelay udelay  分别是毫秒和微秒的延时，本质是while
sleep usleep 让出cpu，本线程进入睡眠
2.内核的时间
应用编程的时候可以使用gettimeofday  以及time等函数获取时间
 内核里提供另一种比较好用得方式，就是使用jiffies变量
 这个变量是一个全局变量。只需要用行。
 他存贮了时间相关的节拍，计算两个时刻之间的差，就可以分别取两次jiffies，然后相减，换算成秒或毫秒
 变量用32位无符号位的变量保存，50天左右归零
 宏定义HZ。每秒钟jiffies数量

3.定时器
内核里面include/linux/timer.h是定时器相关的调用函数
定时器的类型 
struct  timer_list
{
struct list_head entry;
undignef long expires;      //超时的时间
struct tvec_base *base;  
void (*function) (unsigned long);    //定时器的到期后的中断处理
unsigned long data;              //传数据
int  slack;
}

定时器的初始化
init_timer(struct timer_list&timerlist)

定时器的成员赋值
timerlist.expires=jiffies+HZ    //一秒钟后产生中断
timerlist.function-handler  //handler 是自己定义的中断处理函数
timerlist.data=0;   //不带任何参数

定时器加入系统
add_timer(struct timer_list &timerlist)

定时器到期后产生中断，跳入中断处理函数，定时器失效，
